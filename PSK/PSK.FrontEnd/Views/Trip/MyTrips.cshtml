@using Contracts
@model Contracts.MyTripsDto

@{
    ViewData["Title"] = "MyTrips";
}

<h2>My trips</h2>

<div class="col-xs-10">
    <button>
        @Html.ActionLink("All", "MyTrips", new { dateFilter = DateFilter.All })
    </button>
    <button>
        @Html.ActionLink("Upcoming", "MyTrips", new { dateFilter = DateFilter.Upcoming })
    </button>
    <button>
        @Html.ActionLink("Ongoing", "MyTrips", new { dateFilter = DateFilter.Ongoing })
    </button>
    <button type="button" class="btn btn-default" disabled="@Model.DateFilter.Equals(DateFilter.Past)" 
            asp-action="MyTrips" asp-route-dateFilter="@Model.DateFilter">
        Past Trips
    </button>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                Date from
            </th>
            <th>
                Date until
            </th>
            <th>
                Organizer
            </th>
            <th>
                Start
            </th>
            <th>
                Destination
            </th>
            <th>
                Employees
            </th>
            <th>
                Comment
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.MyTrips)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                <td>
                    @Html.ActionLink(item.Organizer.FullName, "Details", "Employee", new { id = item.Organizer.Id })
                </td>
                <td>
                    @Html.ActionLink(item.StartLocation.Name, "Details", "Office", new { id = item.StartLocation?.Id })
                </td>
                <td>
                    @Html.ActionLink(item.EndLocation.Name, "Details", "Office", new { id = item.EndLocation?.Id })
                </td>
                <td>
                    @Html.ActionLink("Show employees", "TripEmployees", "TripEmployee", new { tripId = item.Id })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Comment)
                </td>
            </tr>
        }
    </tbody>
</table>

@if (Model.IsOrganizer)
{
    <h2>My organized trips</h2>

    <table class="table">
        <thead>
        <tr>
            <th>
                Date from
            </th>
            <th>
                Date until
            </th>
            <th>
                Organizer
            </th>
            <th>
                Start
            </th>
            <th>
                Destination
            </th>
            <th>
                Employees
            </th>
            <th>
                Comment
            </th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.MyOrganizedTrips)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                <td>
                    @Html.ActionLink(item.Organizer.FullName, "Details", "Employee", new { id = item.Organizer.Id })
                </td>
                <td>
                    @Html.ActionLink(item.StartLocation.Name, "Details", "Office", new { id = item.StartLocation?.Id })
                </td>
                <td>
                    @Html.ActionLink(item.EndLocation.Name, "Details", "Office", new { id = item.EndLocation?.Id })
                </td>
                <td>
                    @Html.ActionLink("show employees", "TripEmployees", "TripEmployee", new { tripId = item.Id })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Comment)
                </td>
            </tr>
        }
        </tbody>
    </table>

    <p>
        <a asp-action="AddNew">Create New</a>
    </p>
}