@model Contracts.TripMergeDto

@{
    ViewData["Title"] = "Merge";
}

<h2>Merge</h2>

<h4>TripMergeDto</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        Date from
                    </th>
                    <th>
                        Date until
                    </th>
                    <th>
                        Organizer
                    </th>
                    <th>
                        Start
                    </th>
                    <th>
                        Destination
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PrimaryTrip.Employees)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PrimaryTrip.Comment)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => modelItem.PrimaryTrip.StartDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => modelItem.PrimaryTrip.EndDate)
                    </td>
                    <th>
                        @Html.ActionLink(Model.PrimaryTrip.Organizer.FullName, "Details", "Employee", new { id = Model.SecondaryTrip.Organizer.Id })
                    </th>
                    <th>
                        @Html.ActionLink(@Model.PrimaryTrip.StartLocation.Name, "Details", "Office", new {id = @Model.PrimaryTrip.StartLocation?.Id})
                    </th>
                    <th>
                        @Html.ActionLink(@Model.PrimaryTrip.EndLocation.Name, "Details", "Office", new {id = @Model.PrimaryTrip.EndLocation?.Id})
                    </th>
                    <th>
                        @Html.ActionLink("showEmployees", "TripEmployees", "TripEmployee", new {tripId = @Model.PrimaryTrip.Id })
                    </th>
                    <td>
                        @Html.DisplayFor(modelItem => @Model.PrimaryTrip.Comment)
                    </td>
                </tr>
            </tbody>
        </table>

        <table class="table">
            <thead>
                <tr>
                    <th>
                        Date from
                    </th>
                    <th>
                        Date until
                    </th>
                    <th>
                        Organizer
                    </th>
                    <th>
                        Start
                    </th>
                    <th>
                        Destination
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.SecondaryTrip.Employees)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.SecondaryTrip.Comment)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => modelItem.SecondaryTrip.StartDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => modelItem.SecondaryTrip.EndDate)
                    </td>
                    <th>
                        @Html.ActionLink(Model.SecondaryTrip.Organizer.FullName, "Details", "Employee", new { id = Model.SecondaryTrip.Organizer.Id })
                    </th>
                    <th>
                        @Html.ActionLink(@Model.SecondaryTrip.StartLocation.Name, "Details", "Office", new {id = @Model.SecondaryTrip.StartLocation?.Id})
                    </th>
                    <th>
                        @Html.ActionLink(@Model.SecondaryTrip.EndLocation.Name, "Details", "Office", new {id = @Model.SecondaryTrip.EndLocation?.Id})
                    </th>
                    <th>
                        @Html.ActionLink("showEmployees", "TripEmployees", "TripEmployee", new {tripId = @Model.SecondaryTrip.Id })
                    </th>
                    <td>
                        @Html.DisplayFor(modelItem => @Model.SecondaryTrip.Comment)
                    </td>
                </tr>
            </tbody>
        </table>
        <form asp-action="MergeTrips">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="PrimaryTrip.Id" />
            <input type="hidden" asp-for="SecondaryTrip.Id" />
            <div class="form-group">
                <label asp-for="PrimaryTrip.StartDate" class="control-label">Trip start date (MM-DD-YYYY)</label>
                <input asp-for="PrimaryTrip.StartDate" class="form-control" type="date" id="tripStartDateInput" required />
                <span asp-validation-for="PrimaryTrip.StartDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PrimaryTrip.EndDate" class="control-label">Trip end date (MM-DD-YYYY)</label>
                <input asp-for="PrimaryTrip.EndDate" class="form-control" type="date" id="tripEndDateInput" required />
                <span asp-validation-for="PrimaryTrip.EndDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PrimaryTrip.Comment" class="control-label">Comment</label>
                <input asp-for="PrimaryTrip.Comment" class="form-control" />
                <span asp-validation-for="PrimaryTrip.Comment" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script type="text/javascript">

        function validateForm() {
            var startDate = $("#tripStartDateInput").val();
            var endDate = $("#tripEndDateInput").val();

            var currentDate = new Date();

            if (startDate >= currentDate) {
                alert("Wrong trip start date");
                return false;
            } else if (endDate >= currentDate) {
                alert("Wrong trip end date");
                return false;
            } else if (endDate < startDate)
                alert("Check start and end dates of the trip. Start date cannot be after end date");
        }

        $(document).ready(function () {

            var today = new Date();
            var dd = String(today.getDate()).padStart(2, '0');
            var mm = String(today.getMonth() + 1).padStart(2, '0');
            var yyyy = today.getFullYear();

            today = yyyy + '-' + mm + '-' + dd;
            today = today.toString();

            $('#tripStartDateInput').attr({ "min": today });
            $('#tripEndDateInput').attr({ "min": today });
        });


        document.getElementById("tripStartDateInput").onchange = function () {
            var input = document.getElementById("tripEndDateInput");
            input.setAttribute("min", this.value);
        }

    </script>
}

